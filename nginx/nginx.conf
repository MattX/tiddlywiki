events {}

http {
    server {
        listen 80;
        server_name wiki.terbium.io;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name wiki.terbium.io;

        ssl_certificate /etc/letsencrypt/live/wiki.terbium.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/wiki.terbium.io/privkey.pem;

        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        location /oauth2/ {
            proxy_pass       http://oauth2-proxy:4180;
            proxy_set_header Host                    $host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Scheme                $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
        }

        location / {
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/start;

            # pass information via X-User and X-Email headers to backend,
            # requires running with --set-xauthrequest flag
            auth_request_set $user   $upstream_http_x_auth_request_user;
            auth_request_set $email  $upstream_http_x_auth_request_email;
            proxy_set_header X-User  $user;
            proxy_set_header X-Email $email;

            # if you enabled --cookie-refresh, this is needed for it to work with auth_request
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie;

            proxy_pass http://tiddlywiki:8080/;
        }
    }

    server {
        listen 443 ssl;
        listen 8448 ssl;
        server_name matrix.terbium.io;

        ssl_certificate /etc/letsencrypt/live/matrix.terbium.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/matrix.terbium.io/privkey.pem;

        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        
        location /.well-known/matrix/client {
            return 200 '{"m.homeserver": {"base_url": "https://matrix.terbium.io:8448"}}';
            default_type application/json;
            add_header Access-Control-Allow-Origin *;
        }

        location / {
            proxy_pass http://synapse:8008;

            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
        }
    }
}
